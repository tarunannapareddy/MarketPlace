CREATE DATABASE users
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'C'
    LC_CTYPE = 'C'
    LOCALE_PROVIDER = 'libc'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

CREATE TABLE USERS(
	USER_ID SERIAL PRIMARY KEY NOT NULL,
	PASSWORD VARCHAR(50) NOT NULL
);

CREATE TABLE SELLERS(
	SELLER_ID INTEGER PRIMARY KEY REFERENCES USERS(USER_ID) NOT NULL,
	SELLER_NAME VARCHAR(32) NOT NULL,
	POS_REV_COUNT INTEGER DEFAULT 0,
	NEG_REV_COUNT INTEGER DEFAULT 0,
	ITEMS_SOLD INTEGER DEFAULT 0
);

CREATE TABLE BUYERS(
	BUYER_ID INTEGER PRIMARY KEY REFERENCES USERS(USER_ID) NOT NULL,
	BUYER_NAME VARCHAR(32) NOT NULL,
	CART_ID INTEGER,
	EMAIL VARCHAR(100) NOT NULL,
	NUM_ITEMS_PURCH INTEGER DEFAULT 0
);


CREATE DATABASE products
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'C'
    LC_CTYPE = 'C'
    LOCALE_PROVIDER = 'libc'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

CREATE TABLE ITEMS(
	ITEM_ID VARCHAR(40) PRIMARY KEY NOT NULL,
	ITEM_CATEGORY INTEGER NOT NULL,
	SELLER_ID INTEGER NOT NULL,
	ITEM_NAME VARCHAR(32) NOT NULL,
	QUANTITY INTEGER NOT NULL DEFAULT 1,
	SALE_PRICE DECIMAL(6,2) NOT NULL,
	KEYWORDS VARCHAR(8)[5] DEFAULT '{}'
);

CREATE TABLE CARTS(
	CART_ID SERIAL PRIMARY KEY NOT NULL,
	BUYER_ID INTEGER NOT NULL
);

CREATE TABLE CART_ITEMS(
	CART_ID INTEGER REFERENCES CARTS(CART_ID) NOT NULL,
	ITEM_ID VARCHAR(40) REFERENCES ITEMS(ITEM_ID) NOT NULL,
	QUANTITY INTEGER NOT NULL
);

CREATE TABLE ORDERS(
	ORDER_ID SERIAL PRIMARY KEY NOT NULL,
	BUYER_ID INTEGER NOT NULL
);

CREATE TABLE ORDER_ITEMS(
	ORDER_ID INTEGER REFERENCES ORDERS(ORDER_ID) NOT NULL,
	ITEM_ID VARCHAR(40) REFERENCES ITEMS(ITEM_ID) NOT NULL,
	QUANTITY INTEGER NOT NULL
);

CREATE TABLE FEEDBACKS(
	FEEDBACK_ID varchar(64) PRIMARY KEY NOT NULL,
	ORDER_ID INTEGER REFERENCES ORDERS(ORDER_ID) NOT NULL,
	ITEM_ID VARCHAR(40) REFERENCES ITEMS(ITEM_ID) NOT NULL,
	BUYER_ID INTEGER NOT NULL,
	FEEDBACK BOOLEAN NOT NULL
);